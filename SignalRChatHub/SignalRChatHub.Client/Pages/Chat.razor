@page "/chat"
@inject NavigationManager navigationManager;
@rendermode InteractiveWebAssembly

<h3>Chat</h3>

@if (IsConnected)
{
    <input type="text" @bind="userInput" />
    <input type="text" @bind="messageInput" />
    <button @onclick="Send">Send</button>

    <ul id="messagList">
        @foreach (var message in messages)
        {
            <li>@message</li>
        }
    </ul>
}
else
{
    <span>connecting...</span>
}


@code {
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private string userInput;
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
                            .WithUrl(navigationManager
                            .ToAbsoluteUri("/chathub")).Build();

        hubConnection.On<string, string>("RecieveMessage", (user, message) =>
        {
            InvokeAsync(() =>
        {
            var encodeMsg = $"{user}: {message}";
            messages.Add(encodeMsg);
            StateHasChanged(); // ✅ UI-safe
        });
        });

        await hubConnection.StartAsync();
    }

    Task Send() => hubConnection.InvokeAsync("SendMessage", userInput, messageInput);

    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;
}
